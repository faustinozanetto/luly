#shader vertex
#version 450

layout (location = 0) in vec3 a_pos;
layout (location = 1) in vec2 a_tex_coord;

layout (location = 0) out vec2 o_tex_coord;

void main() {
    o_tex_coord = a_tex_coord;
    gl_Position = vec4(a_pos, 1.0f);
}

#shader fragment
#version 450

layout (location = 0) out vec4 frag_color;

layout (location = 0) in vec2 o_tex_coord;

layout (binding = 0) uniform sampler2D u_texture;

uniform vec2 u_screen_size;

#define FXAA_REDUCE_MIN   (1.0/128.0)
#define FXAA_REDUCE_MUL   (1.0/8.0)
#define FXAA_SPAN_MAX     8.0

void main() {
    vec2 texelSize = 1.0 / u_screen_size;
    vec3 rgbNW = texture(u_texture, o_tex_coord.xy + vec2(-1.0, -1.0) * texelSize).xyz;
    vec3 rgbNE = texture(u_texture, o_tex_coord.xy + vec2(1.0, -1.0) * texelSize).xyz;
    vec3 rgbSW = texture(u_texture, o_tex_coord.xy + vec2(-1.0, 1.0) * texelSize).xyz;
    vec3 rgbSE = texture(u_texture, o_tex_coord.xy + vec2(1.0, 1.0) * texelSize).xyz;
    vec3 rgbM = texture(u_texture, o_tex_coord.xy).xyz;

    vec3 luma = vec3(0.299, 0.587, 0.114);
    float lumaNW = dot(rgbNW, luma);
    float lumaNE = dot(rgbNE, luma);
    float lumaSW = dot(rgbSW, luma);
    float lumaSE = dot(rgbSE, luma);
    float lumaM = dot(rgbM, luma);

    float lumaMin = min(lumaM, min(min(lumaNW, lumaNE), min(lumaSW, lumaSE)));
    float lumaMax = max(lumaM, max(max(lumaNW, lumaNE), max(lumaSW, lumaSE)));

    vec2 dir;
    dir.x = -((lumaNW + lumaNE) - (lumaSW + lumaSE));
    dir.y = ((lumaNW + lumaSW) - (lumaNE + lumaSE));

    float dirReduce = max((lumaNW + lumaNE + lumaSW + lumaSE) * (0.25 * FXAA_REDUCE_MUL), FXAA_REDUCE_MIN);
    float rcpDirMin = 1.0 / (min(abs(dir.x), abs(dir.y)) + dirReduce);

    dir = min(vec2(FXAA_SPAN_MAX, FXAA_SPAN_MAX), max(vec2(-FXAA_SPAN_MAX, -FXAA_SPAN_MAX), dir * rcpDirMin)) * texelSize;

    vec3 rgbA = (1.0 / 2.0) * (
        texture(u_texture, o_tex_coord.xy + dir * (1.0 / 3.0 - 0.5)).xyz +
        texture(u_texture, o_tex_coord.xy + dir * (2.0 / 3.0 - 0.5)).xyz);

    vec3 rgbB = rgbA * (1.0 / 2.0) + (1.0 / 4.0) * (
        texture(u_texture, o_tex_coord.xy + dir * (0.0 / 3.0 - 0.5)).xyz +
        texture(u_texture, o_tex_coord.xy + dir * (3.0 / 3.0 - 0.5)).xyz);

    float lumaB = dot(rgbB, luma);
    if ((lumaB < lumaMin) || (lumaB > lumaMax)) {
        frag_color = vec4(rgbA, 1.0);
    } else {
        frag_color = vec4(rgbB, 1.0);
    }
}