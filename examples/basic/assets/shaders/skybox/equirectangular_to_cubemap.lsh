#shader vertex
#version 450

layout (location = 0) in vec3 a_pos;
        
layout (location = 0) out vec3 o_world_pos;

layout (location = 0) uniform mat4 u_projection_matrix;
layout (location = 1) uniform mat4 u_view_matrix;
        
void main() {
    o_world_pos = a_pos;
    gl_Position = u_projection_matrix * u_view_matrix * vec4(a_pos, 1.0);
}

#shader fragment
#version 450 

#include "common/constants.lsh"

layout (location = 0) out vec4 frag_color;

layout (location = 0) in vec3 o_world_pos;

layout (location = 2) uniform sampler2D u_equirectangular_map;
        
vec2 sample_spherical_map(vec3 v)
{
    vec2 uv = vec2(atan(v.z, v.x), asin(v.y));
    uv *= inv_atan;
    uv += 0.5;
    return uv;
}

void main() {
    vec2 tex_coords = sample_spherical_map(normalize(o_world_pos));
    vec3 color = texture(u_equirectangular_map, tex_coords).rgb;

    frag_color = vec4(color, 1.0);
}