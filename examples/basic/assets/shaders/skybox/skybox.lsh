#shader vertex
#version 450

#include "common/camera.lsh"

layout (location = 0) in vec3 a_pos;
layout (location = 1) in vec3 a_normal;
layout (location = 2) in vec2 a_tex_coord;

layout (location = 0) out vec3 o_world_pos;

void main() {
    o_world_pos = a_pos;
    mat4 rot_view = mat4(mat3(camera.view_matrix));
    vec4 clip_pos = camera.projection_matrix * rot_view * vec4(o_world_pos, 1.0);

    gl_Position = clip_pos.xyww;
}

#shader fragment
#version 450

layout (location = 0) in vec3 o_world_pos;

layout(binding = 0) uniform samplerCube u_environment_map;

layout (location = 0) out vec4 frag_color;

void main() {
    vec3 env_color = textureLod(u_environment_map, o_world_pos, 0).rgb;

   // vec3 mapped = vec3(1.0) - exp(-env_color * 0.7);
    //mapped = pow(mapped, vec3(1.0 / 1.9));

    frag_color = vec4(env_color, 1.0);
}