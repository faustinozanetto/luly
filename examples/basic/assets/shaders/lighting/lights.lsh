#include "common/constants.lsh"

struct directional_light {
    vec3 color;
    float intensity;
    vec2 pad1; // Padding to align the structure to 16 bytes
    vec3 direction;
};

struct point_light {
    vec3 color;
    float intensity;
    vec2 pad1; // Padding to align the structure to 16 bytes
    vec3 position;
    float constant_factor;
    float linear_factor;
    float quadratic_factor;
};

struct spot_light {
    vec3 color;
    float intensity;
    vec2 pad1; // Padding to align the structure to 16 bytes
    vec3 position;
    vec2 pad2; // Padding to align the structure to 16 bytes
    vec3 direction;
    vec2 pad3; // Padding to align the structure to 16 bytes
    vec2 angles;  // Assuming angles is a vec2 (adjust if needed)
};

layout (std140, binding = LIGHTS_UBO_LOCATION) uniform lights_ubo
{
    point_light point_lights[MAX_POINT_LIGHTS];
    spot_light spot_lights[MAX_SPOT_LIGHTS];
    directional_light directional_light;
} u_lights;